@page "/"

@using System.ComponentModel.DataAnnotations

<EditForm Model="@personalInfo" OnValidSubmit="@HandleValidSubmit">
    <DataAnnotationsValidator />
    <div class="container mt-5">
        <div class="text-center">
            <h1 class="display-4">Elliot McIntyre</h1>
            <p class="lead mt-3">
                I'm Elliot, a 25-year-old .NET cloud developer from Gothenburg, Sweden. I thrive on crafting scalable cloud solutions, leveraging my expertise in .NET and cloud computing to drive innovation. Passionate about pushing the boundaries of technology, I'm dedicated to creating high-performance applications that meet the evolving demands of the digital world.
            </p>
        </div>

        <h2 class="mt-4">Skills</h2>
        <ul class="list-group">
            @foreach (var skill in skills)
            {
                <li class="list-group-item">@skill</li>
            }
        </ul>

        <h2 class="mt-4">Projects</h2>
        <ul class="list-group">
            @foreach (var project in projects)
            {
                <li class="list-group-item">
                    <h3>@project.Title</h3>
                    <p>@project.Description</p>
                </li>
            }
        </ul>

        <h2 class="mt-4">Contact Information</h2>
        <div class="form-group">
            <label for="phoneNumber">Phone Number:</label>
            <InputText id="phoneNumber" class="form-control" @bind-Value="personalInfo.PhoneNumber" />
            <ValidationMessage For="@(() => personalInfo.PhoneNumber)" />
        </div>
        <div class="form-group">
            <label for="email">Email:</label>
            <InputText id="email" class="form-control" @bind-Value="personalInfo.Email" />
            <ValidationMessage For="@(() => personalInfo.Email)" />
        </div>
        <div class="form-group">
            <label for="address">Address:</label>
            <InputText id="address" class="form-control" @bind-Value="personalInfo.Address" />
            <ValidationMessage For="@(() => personalInfo.Address)" />
        </div>
        <div class="form-group">
            <label for="city">City:</label>
            <InputText id="city" class="form-control" @bind-Value="personalInfo.City" />
            <ValidationMessage For="@(() => personalInfo.City)" />
        </div>

        <div class="text-center mt-4">
            <button type="submit" class="btn btn-primary">Save</button>
        </div>

        <div class="text-center mt-4">
            <a href="https://www.linkedin.com/in/elliot-mcintyre-6b2b491a2/" class="btn btn-primary mx-2" target="_blank">
                <i class="fab fa-linkedin"></i> LinkedIn
            </a>
            <a href="https://github.com/ellmci0316" class="btn btn-dark mx-2" target="_blank">
                <i class="fab fa-github"></i> GitHub
            </a>
        </div>
    </div>
</EditForm>

@code {
    private List<string> skills = new List<string>
    {
        "C#",
        "Blazor",
        "ASP.NET Core",
        "SQL",
        "JavaScript",
        "Falukorv"
    };

    private List<Project> projects = new List<Project>
    {
        new Project { Title = "Project One", Description = "Developed a cloud-based solution using .NET and Azure." },
        new Project { Title = "Project Two", Description = "Implemented a microservices architecture with .NET Core and Docker." },
        new Project { Title = "Project Three", Description = "Created a responsive web application with React and ASP.NET Core." }
    };

    private class Project
    {
        public string Title { get; set; }
        public string Description { get; set; }
    }

    private PersonalInfo personalInfo = new PersonalInfo();

    private class PersonalInfo
    {
        [Required(ErrorMessage = "Phone number is required")]
        public string PhoneNumber { get; set; }

        [Required(ErrorMessage = "Email is required")]
        [EmailAddress(ErrorMessage = "Invalid email address")]
        public string Email { get; set; }

        [Required(ErrorMessage = "Address is required")]
        public string Address { get; set; }

        [Required(ErrorMessage = "City is required")]
        public string City { get; set; }
    }

    private void HandleValidSubmit()
    {

    }
}
